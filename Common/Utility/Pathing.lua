LoadGOSScript(Base64Decode("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"))

	--[[
		+++	Pathing +++

		Init the Script: 
			Path:__init(range)
				range[number]: Range in which all units waypoints are tracked (25000 if unset)

		Get Path of a Unit
			Path:GetData(unit)
				unit[object]: The object u want to get the Data from
				==> returns table holding: index, position, dashgravity, dashspeed ({} if no Data)

		Get Position of unit after time x
			Path:GetPositionAfter(unit, time)
				unit[object]: The object u want to get the Data from
				time[number]: In Seconds
				==> returns unit position after given time as 3D coordinate (unit.pos if no waypoint)
					==> DrawCircle will show it very nicely

	--]]
